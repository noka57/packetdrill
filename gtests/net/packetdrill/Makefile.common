PKG_INSTALL_DIR=/cygdrive/c/cygwin/E2500_install
CFLAGS = -g -Wall -Werror -DECOS -I$(PKG_INSTALL_DIR)/include
CC = /opt/ecos/gnutools/arm-elf/bin/arm-elf-gcc.exe
LDFLAGS= -nostdlib -L$(PKG_INSTALL_DIR)/lib  -Wl,--gc-sections -Wl,--Map -Wl
LIBS=-T $(PKG_INSTALL_DIR)/lib/target.ld

all: packetdrill

parser.o: parser.y
	bison --output=parser.c --defines=parser.h --report=state parser.y
	$(CC) $(CFLAGS) -c parser.c

lexer.o: lexer.l parser.o
	flex -olexer.c lexer.l
	$(CC) -O2 $(CFLAGS) -c lexer.c

packetdrill-lib := \
         checksum.o code.o config.o hash.o hash_map.o patch_for_ecos.o ip_address.o ip_prefix.o \
         netdev.o net_utils.o \
         packet.o packet_socket_linux.o packet_socket_pcap.o \
         packet_checksum.o packet_parser.o packet_to_string.o \
         symbols_linux.o \
         symbols_freebsd.o \
         symbols_openbsd.o \
         symbols_netbsd.o \
         gre_packet.o icmp_packet.o ip_packet.o tcp_packet.o udp_packet.o \
         mpls_packet.o \
         run.o run_command.o run_packet.o run_system_call.o \
         script.o socket.o system.o \
         tcp_options.o tcp_options_iterator.o tcp_options_to_string.o \
         logging.o types.o lexer.o parser.o \
         fmemopen.o open_memstream.o \
         link_layer.o wire_conn.o wire_protocol.o \
         wire_client.o wire_client_netdev.o \
         wire_server.o wire_server_netdev.o

packetdrill-objs := packetdrill.o $(packetdrill-lib)

packetdrill: $(packetdrill-objs)
	ar rcs packetdrill.a $(packetdrill-objs)
     
clean:
	/bin/rm -f *.o *.a packetdrill lexer.c parser.c parser.h parser.output

